{"ast":null,"code":"function Identify() {}\nexport default {\n  name: \"Identify\",\n  components: {\n    Identify\n  },\n  data() {\n    return {\n      // 表单提交内容\n      formLogin: {\n        code: \"\" //验证码输入框\n      },\n\n      identifyCodes: \"1234567890abcdefjhijklinopqrsduvwxyz\",\n      //随机串内容,从这里随机抽几个显示验证码\n      identifyCode: \"\" //验证码图片内容\n    };\n  },\n\n  mounted() {\n    // 初始化验证码\n    this.identifyCode = \"\";\n    //参数：（1）随机串内容。（2）验证码显示位数\n    this.makeCode(this.identifyCodes, 4);\n  },\n  methods: {\n    // 重置验证码\n    refreshCode() {\n      this.identifyCode = \"\";\n      this.makeCode(this.identifyCodes, 4);\n    },\n    //获取验证码的值\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        //通过循环获取字符串内随机几位\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    //随机数字：用于当角标拿字符串的值\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    submit() {\n      console.log(\"验证码:\", this.identifyCode);\n      console.log(\"用户输入的验证码:\", this.formLogin.code);\n      console.log('是否验证通过:', this.identifyCode == this.formLogin.code);\n    }\n  }\n};","map":{"version":3,"names":["Identify","name","components","data","formLogin","code","identifyCodes","identifyCode","mounted","makeCode","methods","refreshCode","o","l","i","randomNum","length","min","max","Math","floor","random","submit","console","log"],"sources":["src/components/identify.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <el-row>\r\n      <el-col :span=\"4\"\r\n      ><el-input\r\n          placeholder=\"请输入验证码\"\r\n          v-model=\"formLogin.code\"\r\n      ></el-input\r\n      ></el-col>\r\n      <el-col :span=\"4\">\r\n        <div class=\"login-code\" width=\"100%\" @click=\"refreshCode\">\r\n          <!--验证码组件-->\r\n          <dentify :identifyCode=\"identifyCode\"></dentify></div\r\n        ></el-col>\r\n    </el-row>\r\n    <div><el-button @click=\"submit\">提交</el-button></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nfunction Identify() {\r\n  \r\n}\r\n\r\nexport default {\r\n  name: \"Identify\",\r\n  components: {\r\n    Identify,\r\n  },\r\n  data() {\r\n    return {\r\n      // 表单提交内容\r\n      formLogin: {\r\n        code: \"\", //验证码输入框\r\n      },\r\n      identifyCodes: \"1234567890abcdefjhijklinopqrsduvwxyz\", //随机串内容,从这里随机抽几个显示验证码\r\n      identifyCode: \"\", //验证码图片内容\r\n    };\r\n  },\r\n  mounted() {\r\n    // 初始化验证码\r\n    this.identifyCode = \"\";\r\n    //参数：（1）随机串内容。（2）验证码显示位数\r\n    this.makeCode(this.identifyCodes, 4);\r\n  },\r\n  methods: {\r\n    // 重置验证码\r\n    refreshCode() {\r\n      this.identifyCode = \"\";\r\n      this.makeCode(this.identifyCodes, 4);\r\n    },\r\n    //获取验证码的值\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        //通过循环获取字符串内随机几位\r\n        this.identifyCode +=\r\n            this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\r\n      }\r\n    },\r\n    //随机数字：用于当角标拿字符串的值\r\n    randomNum(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    },\r\n    submit() {\r\n      console.log(\"验证码:\", this.identifyCode);\r\n      console.log(\"用户输入的验证码:\",this.formLogin.code);\r\n      console.log('是否验证通过:',this.identifyCode==this.formLogin.code);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"AAqBA,SAAAA,SAAA,GAEA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACA;MACAC,SAAA;QACAC,IAAA;MACA;;MACAC,aAAA;MAAA;MACAC,YAAA;IACA;EACA;;EACAC,QAAA;IACA;IACA,KAAAD,YAAA;IACA;IACA,KAAAE,QAAA,MAAAH,aAAA;EACA;EACAI,OAAA;IACA;IACAC,YAAA;MACA,KAAAJ,YAAA;MACA,KAAAE,QAAA,MAAAH,aAAA;IACA;IACA;IACAG,SAAAG,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA;QACA,KAAAP,YAAA,IACA,KAAAD,aAAA,MAAAS,SAAA,SAAAT,aAAA,CAAAU,MAAA;MACA;IACA;IACA;IACAD,UAAAE,GAAA,EAAAC,GAAA;MACA,OAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,MAAAH,GAAA,GAAAD,GAAA,IAAAA,GAAA;IACA;IACAK,OAAA;MACAC,OAAA,CAAAC,GAAA,cAAAjB,YAAA;MACAgB,OAAA,CAAAC,GAAA,mBAAApB,SAAA,CAAAC,IAAA;MACAkB,OAAA,CAAAC,GAAA,iBAAAjB,YAAA,SAAAH,SAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}